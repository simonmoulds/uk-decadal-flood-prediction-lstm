
configfile: 'config/config.yml'

AGGR = ['yr2', 'yr2to9', 'yr2to9_lag']
EXPM = ['hindcast', 'observed']

rule all:
    input:
        # 'results/nrfa-discharge-summaries',
        # expand('results/analysis/{aggr}/obs_study_period.parquet', aggr = AGGR),
        # expand('results/analysis/{aggr}/ensemble_fcst.parquet', aggr = AGGR),
        # expand('results/analysis/{aggr}/ensemble_mean_fcst.parquet', aggr = AGGR),
        # expand('results/analysis/{aggr}/matched_ensemble.parquet', aggr = AGGR),
        # expand('results/analysis/{aggr}/matched_ensemble_error.parquet', aggr = AGGR)
        # expand('results/analysis/{aggr}/input', aggr = AGGR)
        # expand('results/analysis/{expm}', expm = EXPM)
        'results/fig/fig1.png',
        'results/fig/fig2.png',
        'results/fig/fig3.png',
        'results/fig/fig4.png',
        'results/fig/figS1.png',
        'results/fig/figS2.png',
        'results/fig/figS3.png',
        'results/fig/figS4.png'

rule obs_input:
    input:
        files='config/config.yml',
        script='workflow/scripts/Python/prepare-observed-input-data.py'
    output:
        'results/obs.parquet'
    params:
        outputdir='results'
    shell:
        """
        python {input.script} -i {input.files} -o {params.outputdir}
        """

rule mod_input:
    input:
        files='config/config.yml',
        script='workflow/scripts/Python/prepare-modelled-input-data.py'
    output:
        directory('results/ensemble-forecast')
    shell:
        """
        mkdir -p {output}
        python {input.script} -i {input.files} -o {output}
        """

rule get_discharge_data:
    input:
        files='../data-raw/UKBN/UKBN_Station_List_vUKBN2.0_1.csv',
        script='workflow/scripts/R/download-discharge-data.R'
    output:
        directory('results/nrfa-discharge-summaries')
    shell:
        """
        Rscript {input.script} {input.files} {output}
        """

rule nao_matching:
    input:
        'results/nrfa-discharge-summaries',
        script='workflow/scripts/R/perform-nao-matching.R',
        config='config/config.yml',
        obs='results/obs.parquet',
        fcst='results/ensemble-forecast'
    output:
        'results/analysis/{aggr}/obs_study_period.parquet',
        'results/analysis/{aggr}/ensemble_fcst.parquet',
        'results/analysis/{aggr}/ensemble_mean_fcst.parquet',
        'results/analysis/{aggr}/matched_ensemble.parquet',
        'results/analysis/{aggr}/matched_ensemble_error.parquet'
    params:
        outputdir='results/analysis'
    shell:
        """
        Rscript {input.script} {input.config} {input.obs} {input.fcst} {wildcards.aggr} {params.outputdir}
        """

rule build_catchment_dataset:
    input:
        'results/nrfa-discharge-summaries',
        'results/obs.parquet',
        expand('results/analysis/{aggr}/matched_ensemble.parquet', aggr = AGGR),
        expand('results/analysis/{aggr}/matched_ensemble_error.parquet', aggr = AGGR),
        script='workflow/scripts/R/build-catchment-dataset.R',
        config='config/config.yml',
        obs='results/obs.parquet'
    output:
        directory('results/analysis/{aggr}/input')
    params:
        outputdir='results'
    shell:
        """
        Rscript {input.script} {input.config} {input.obs} {wildcards.aggr} {params.outputdir}
        """

rule fit_models:
    input:
        expand('results/analysis/{aggr}/input', aggr = AGGR),
        script='workflow/scripts/R/fit-models.R',
        config='config/config.yml'
    output:
        directory('results/analysis/{expm}')
    wildcard_constraints:
        expm='|'.join([re.escape(x) for x in EXPM])
    params:
        outputdir='results'
    shell:
        """
        Rscript {input.script} {input.config} {wildcards.expm} {params.outputdir}
        """

rule make_plots:
    input:
        expand('results/analysis/{expm}', expm = EXPM),
        script='workflow/scripts/R/evaluate-models.R',
        config='config/config.yml'
    output:
        'results/fig/fig1.png',
        'results/fig/fig2.png',
        'results/fig/fig3.png',
        'results/fig/fig4.png',
        'results/fig/figS1.png',
        'results/fig/figS2.png',
        'results/fig/figS3.png',
        'results/fig/figS4.png'
    params:
        outputdir='results'
    shell:
        """
        Rscript {input.script} {input.config} {params.outputdir}
        """
